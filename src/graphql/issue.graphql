query getIssues($filter: String!, $orderBy: IssueOrder!, $count: Int!, $skip: Int!, $trackable: ID!) {
    node(id: $trackable) {
        ... on Trackable {
            issues(filter: { title: { contains: $filter } }, orderBy: $orderBy, first: $count, skip: $skip) {
                nodes {
                    id
                    title
                    createdAt
                    createdBy {
                        ...DefaultUserInfo
                    }
                    ...DefaultIssueIconInfo
                    issueComments {
                        totalCount
                    }
                    labels {
                        nodes {
                            ...DefaultLabelInfo
                        }
                    }
                    assignments {
                        nodes {
                            user {
                                ...DefaultUserInfo
                            }
                        }
                    }
                }
                totalCount
            }
        }
    }
}

query getIssue($id: ID!) {
    node(id: $id) {
        ... on Issue {
            id
            title
            createdBy {
                ...DefaultUserInfo
            }
            createdAt
            lastUpdatedAt
            timelineItems(orderBy: { field: CREATED_AT }) {
                nodes {
                    ...DefaultTimelineItemInfo
                }
            }
            artefacts {
                nodes {
                    ...ArtefactTimelineInfo
                }
            }
            outgoingRelations {
                nodes {
                    id
                    ...OutgoingRelationTimelineInfo
                }
                totalCount
            }
            incomingRelations {
                nodes {
                    id
                    ...IncomingRelationTimelineInfo
                }
                totalCount
            }
            labels {
                nodes {
                    id
                    ...DefaultLabelInfo
                }
            }
            affects {
                nodes {
                    ...AffectedByIssueTimelineInfo
                }
            }
            assignments {
                nodes {
                    id
                    ...AssignmentTimelineInfo
                }
            }
            type {
                id
                ...IssueTypeTimelineInfo
            }
            state {
                id
                ...IssueStateTimelineInfo
            }
            priority {
                id
                ...IssuePriorityTimelineInfo
            }
            estimatedTime
            spentTime
            startDate
            dueDate
        }
    }
}

fragment DefaultIssueIconInfo on Issue {
    incomingRelations {
        totalCount
    }
    outgoingRelations {
        totalCount
    }
    state {
        isOpen
    }
    type {
        iconPath
    }
}
