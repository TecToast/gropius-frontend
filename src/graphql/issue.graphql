query getIssueList(
    $orderBy: IssueOrder!
    $count: Int!
    $skip: Int!
    $trackable: ID!
    $stateFilter: IssueStateFilterInput
) {
    node(id: $trackable) {
        ... on Trackable {
            issues(filter: { state: $stateFilter }, orderBy: $orderBy, first: $count, skip: $skip) {
                nodes {
                    ...IssueListItemInfo
                }
                totalCount
            }
        }
    }
}

query getFilteredIssueList($query: String!, $count: Int!, $trackable: ID!, $stateFilter: IssueStateFilterInput) {
    searchIssues(
        query: $query
        first: $count
        filter: { trackables: { any: { id: { eq: $trackable } } }, state: $stateFilter }
    ) {
        ...IssueListItemInfo
    }
}

query getParticipatingIssueList($orderBy: IssueOrder!, $count: Int!, $skip: Int!, $filter: IssueFilterInput) {
    currentUser {
        participatedIssues(filter: $filter, orderBy: $orderBy, first: $count, skip: $skip) {
            nodes {
                ...ParticipatingIssueListItemInfo
            }
            totalCount
        }
    }
}

query getParticipatingFilteredIssueList($query: String!, $count: Int!, $filter: IssueFilterInput) {
    searchIssues(query: $query, first: $count, filter: $filter) {
        ...ParticipatingIssueListItemInfo
    }
}

query getIssue($id: ID!) {
    node(id: $id) {
        ... on Issue {
            id
            title
            createdBy {
                ...DefaultUserInfo
            }
            createdAt
            lastUpdatedAt
            timelineItems(orderBy: { field: CREATED_AT }) {
                nodes {
                    ...DefaultTimelineItemInfo
                }
            }
            artefacts {
                nodes {
                    ...ArtefactTimelineInfo
                }
            }
            outgoingRelations {
                nodes {
                    id
                    ...OutgoingRelationTimelineInfo
                }
                totalCount
            }
            incomingRelations {
                nodes {
                    id
                    ...IncomingRelationTimelineInfo
                }
                totalCount
            }
            labels {
                nodes {
                    ...DefaultLabelInfo
                }
            }
            affects {
                nodes {
                    ...AffectedByIssueTimelineInfo
                }
            }
            assignments {
                nodes {
                    ...AssignmentTimelineInfo
                }
            }
            type {
                ...DefaultIssueTypeInfo
            }
            state {
                ...DefaultIssueStateInfo
            }
            priority {
                ...DefaultIssuePriorityInfo
            }
            templatedFields {
                name
                value
            }
            template {
                ...DefaultIssueTemplateInfo
            }
            estimatedTime
            spentTime
            startDate
            dueDate
            manageIssues: hasPermission(permission: MANAGE_ISSUES)
            comment: hasPermission(permission: COMMENT)
            moderator: hasPermission(permission: MODERATOR)
        }
    }
}

mutation updateBody($id: ID!, $body: String!) {
    updateBody(input: { id: $id, body: $body }) {
        body {
            ...BodyTimelineInfo
        }
    }
}

mutation updateIssueComment($id: ID!, $body: String!) {
    updateIssueComment(input: { id: $id, body: $body }) {
        issueComment {
            ...IssueCommentTimelineInfo
        }
    }
}

mutation createIssueComment($issue: ID!, $body: String!, $answers: ID) {
    createIssueComment(input: { issue: $issue, body: $body, answers: $answers }) {
        issueComment {
            ...IssueCommentTimelineInfo
        }
    }
}

mutation deleteIssueComment($id: ID!) {
    deleteIssueComment(input: { id: $id }) {
        issueComment {
            ...IssueCommentTimelineInfo
        }
    }
}

mutation createIssue($input: CreateIssueInput!) {
    createIssue(input: $input) {
        issue {
            id
        }
    }
}

mutation changeIssueTitle($id: ID!, $title: String!) {
    changeIssueTitle(input: { issue: $id, title: $title }) {
        titleChangedEvent {
            ...TitleChangedEventTimelineInfo
        }
    }
}

mutation changeIssueTemplatedField($input: ChangeIssueTemplatedFieldInput!) {
    changeIssueTemplatedField(input: $input) {
        templatedFieldChangedEvent {
            ...TemplatedFieldChangedEventTimelineInfo
        }
    }
}

fragment DefaultIssueInfo on Issue {
    ...DefaultIssueIconInfo
    id
    title
    trackables {
        nodes {
            ...DefaultTrackableInfo
        }
    }
}

fragment IssueListItemInfo on Issue {
    id
    title
    createdAt
    createdBy {
        ...DefaultUserInfo
    }
    ...DefaultIssueIconInfo
    issueComments {
        totalCount
    }
    labels {
        nodes {
            ...DefaultLabelInfo
        }
    }
    assignments {
        nodes {
            user {
                ...DefaultUserInfo
            }
        }
    }
}

fragment ParticipatingIssueListItemInfo on Issue {
    ...IssueListItemInfo
    trackables(first: 1) {
        nodes {
            __typename
            id
            name
            description
        }
        totalCount
    }
}

fragment DefaultIssueIconInfo on Issue {
    incomingRelations {
        totalCount
    }
    outgoingRelations {
        totalCount
    }
    state {
        isOpen
    }
    type {
        iconPath
    }
}

query searchIssues($query: String!, $count: Int!, $trackable: ID!) {
    searchIssues(query: $query, first: $count, filter: { trackables: { any: { id: { eq: $trackable } } } }) {
        ...DefaultIssueInfo
    }
}
