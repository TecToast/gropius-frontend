query getIssues($filter: String!, $orderBy: IssueOrder!, $count: Int!, $skip: Int!, $trackable: ID!) {
    node(id: $trackable) {
        ... on Trackable {
            issues(filter: { title: { contains: $filter } }, orderBy: $orderBy, first: $count, skip: $skip) {
                nodes {
                    id
                    title
                    createdAt
                    createdBy {
                        ...DefaultUserInfo
                    }
                    ...DefaultIssueIconInfo
                    issueComments {
                        totalCount
                    }
                    labels {
                        nodes {
                            ...DefaultLabelInfo
                        }
                    }
                    assignments {
                        nodes {
                            user {
                                ...DefaultUserInfo
                            }
                        }
                    }
                }
                totalCount
            }
        }
    }
}

query getIssue($id: ID!) {
    node(id: $id) {
        ... on Issue {
            id
            title
            createdBy {
                ...DefaultUserInfo
            }
            createdAt
            lastUpdatedAt
            timelineItems(orderBy: { field: CREATED_AT }) {
                nodes {
                    ...DefaultTimelineItemInfo
                }
            }
            artefacts {
                nodes {
                    ...ArtefactTimelineInfo
                }
            }
            outgoingRelations {
                nodes {
                    id
                    ...OutgoingRelationTimelineInfo
                }
                totalCount
            }
            incomingRelations {
                nodes {
                    id
                    ...IncomingRelationTimelineInfo
                }
                totalCount
            }
            labels {
                nodes {
                    ...DefaultLabelInfo
                }
            }
            affects {
                nodes {
                    ...AffectedByIssueTimelineInfo
                }
            }
            assignments {
                nodes {
                    ...AssignmentTimelineInfo
                }
            }
            type {
                ...DefaultIssueTypeInfo
            }
            state {
                ...DefaultIssueStateInfo
            }
            priority {
                ...DefaultIssuePriorityInfo
            }
            template {
                ...DefaultIssueTemplateInfo
            }
            estimatedTime
            spentTime
            startDate
            dueDate
            manageIssues: hasPermission(permission: MANAGE_ISSUES)
            comment: hasPermission(permission: COMMENT)
            moderator: hasPermission(permission: MODERATOR)
        }
    }
}

mutation updateBody($id: ID!, $body: String!) {
    updateBody(input: { id: $id, body: $body }) {
        body {
            ...BodyTimelineInfo
        }
    }
}

mutation updateIssueComment($id: ID!, $body: String!) {
    updateIssueComment(input: { id: $id, body: $body }) {
        issueComment {
            ...IssueCommentTimelineInfo
        }
    }
}

mutation createIssueComment($issue: ID!, $body: String!, $answers: ID) {
    createIssueComment(input: { issue: $issue, body: $body, answers: $answers }) {
        issueComment {
            ...IssueCommentTimelineInfo
        }
    }
}

mutation deleteIssueComment($id: ID!) {
    deleteIssueComment(input: { id: $id }) {
        issueComment {
            ...IssueCommentTimelineInfo
        }
    }
}

mutation createIssue($input: CreateIssueInput!) {
    createIssue(input: $input) {
        issue {
            id
        }
    }
}

fragment DefaultIssueInfo on Issue {
    ...DefaultIssueIconInfo
    id
    title
    trackables {
        nodes {
            ...DefaultTrackableInfo
        }
    }
}

fragment DefaultIssueIconInfo on Issue {
    incomingRelations {
        totalCount
    }
    outgoingRelations {
        totalCount
    }
    state {
        isOpen
    }
    type {
        iconPath
    }
}

query searchIssues($query: String!, $count: Int!) {
    searchIssues(query: $query, first: $count) {
        ...DefaultIssueInfo
    }
}
